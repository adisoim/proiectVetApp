// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proiectVetApp.Data;

#nullable disable

namespace proiectVetApp.Migrations
{
    [DbContext(typeof(proiectVetAppContext))]
    [Migration("20240112221711_mg1")]
    partial class mg1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("proiectClinica.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("proiectClinica.Models.Disinfestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DisinfestationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("Disinfestation");
                });

            modelBuilder.Entity("proiectClinica.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("proiectClinica.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VaccineDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("proiectClinica.Models.VeterinaryClinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Closes")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opens")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VeterinaryClinic");
                });

            modelBuilder.Entity("proiectClinica.Models.VeterinaryVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Diagnostic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinaryClinicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("VeterinaryClinicId");

                    b.ToTable("VeterinaryVisit");
                });

            modelBuilder.Entity("proiectClinica.Models.Animal", b =>
                {
                    b.HasOne("proiectClinica.Models.Member", "Member")
                        .WithMany("Animals")
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("proiectClinica.Models.Disinfestation", b =>
                {
                    b.HasOne("proiectClinica.Models.Animal", "Animal")
                        .WithMany("Disinfestations")
                        .HasForeignKey("AnimalId");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("proiectClinica.Models.Vaccine", b =>
                {
                    b.HasOne("proiectClinica.Models.Animal", "Animal")
                        .WithMany("Vaccines")
                        .HasForeignKey("AnimalId");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("proiectClinica.Models.VeterinaryVisit", b =>
                {
                    b.HasOne("proiectClinica.Models.Animal", "Animal")
                        .WithMany("VeterinaryVisit")
                        .HasForeignKey("AnimalId");

                    b.HasOne("proiectClinica.Models.VeterinaryClinic", "VeterinaryClinic")
                        .WithMany("VeterinaryVisits")
                        .HasForeignKey("VeterinaryClinicId");

                    b.Navigation("Animal");

                    b.Navigation("VeterinaryClinic");
                });

            modelBuilder.Entity("proiectClinica.Models.Animal", b =>
                {
                    b.Navigation("Disinfestations");

                    b.Navigation("Vaccines");

                    b.Navigation("VeterinaryVisit");
                });

            modelBuilder.Entity("proiectClinica.Models.Member", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("proiectClinica.Models.VeterinaryClinic", b =>
                {
                    b.Navigation("VeterinaryVisits");
                });
#pragma warning restore 612, 618
        }
    }
}
